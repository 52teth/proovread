#-- licence -------------------------------------------------------------###
# 
#
#
#
#------------------------------------------------------------------------###
#
# $Id:  $
#
## proovread Config File

##-- style ---------------------------------------------------------------##

## This file can be digested by proovread when provided with -c/--cfg. 
##  Options supersede proovread default values but will be overwritten by
##  command line supplied values. The content is directly evaluated as 
##  perl code (list in hash context), therefore proper syntax is crutial:
##   * "#" starts a comment, which is entirely ignored by the program, on
##     creation, every parameter is commented out, remove the "#" at the
##     beginning of the key => value line if you want your modifications to 
##     have effect
##   * Keys/Strings need to be enclosed '' or ""
##   * Each key requires a value
##   * undef (without ''/"") is a perl keyword, use it if value is unknown/
##     not available
##   * each key => value pair has to be followed by a ","
##   * white space has no effect but better readability
##   * since parameter a evaled, you can use code snippets to determine params
##     dynamically, e.g. to auto-detect the maximum number of threads replace:
##     'threads' => 8,
##     by
##     'threads' => qx(grep '^processor' /proc/cpuinfo | wc -l) =~ s/\n//r,
##     or use perl glob(*.fq) to auto-detect input files...
##   * if you want to create a customized, slim version of this config, the
##     only requirement is that it forms a valid perl list of alternating 
##     keys and values with an even number of arguments total. E.g. these 
##     one liners would make equivalent, complete and proper configs:
##         'long-reads',"LR.fa",'short-reads',"SR.fq"
##         'long-reads' => "LR.fa", 'short-reads' => "SR.fq"
##    * Constrasting to the command line behaviour, keys cannot be 
##      abbreviated


##-- command line parameter ----------------------------------------------##

## Pacbio reads to correct. FASTA or FASTQ format.
'long-reads' => undef,

## High confidence short reads used for correction in FASTQ format.
##  Either one set of reads for all passes or a comma separated list, 
##  one value for each pass.
'short-reads' => undef,

## Prefix to output files. Defaults to <CWD>/<SHORTREADS#LONGREADS> or
##  <CWD>/<SAM>, respectively.
'prefix' => undef,

## Coverage cutoff for highest scoring mappings at each location.
'coverage' => 50,

## Number of threads to use for mapping. Defaults to 8 (or maximum available 
##  number of processors, if kess than 8 availabe).
'threads' => 8,
## to auto-detect max processors use:
## 'threads' => qx(grep '^processor' /proc/cpuinfo | wc -l) =~ s/\n//r,

## Short read quality offset, usually 64 or 33, use 0 for FASTA. Defaults to 
##  guessing, taking into account the first 100 reads of the file. Specify 
##  value if guessing fails.
'sr-qv-offset' => undef,

## Short read length. Defaults to guessing, taking into account the first 100
##  reads of the file. Specify value if guessing fails.
'sr-length' => undef,

## Number of short reads provided, used for ETA calculation. Defaults to 
##  guessing, taking into account the first 100 reads of the file. Specify 
##  value if guessing fails.
'sr-count' => undef,

## By default, while mapping, a temporary SAM file is created and an index to
##  this file is kept in store. This limits the memory requirement for one SMRT
##  cell (>100Mbp, 50X coverage) to less than 10Gb. 
##
## Specify '--ram-sam' to hold the SAM presentation entirely in memory. This is
##  faster and saves disk space, but might require up to 100GB per SMRT cell. 
'ram-sam' => undef,

## Do not process shrimp output on-the-fly, but create a raw sam file
##  and parse this file. Use this for small genomes, where one SMRT
##  Cell covers the genome more than 1X. Otherwise the mapper is 
##  thwarted by the parser.
'raw-sam' => undef,

## Sort the filtered SAM files by coordinates in addition to the 
##  sorting of references. This has no effect on the pipeline, just 
##  a convenience if you need the files for something else.
'sort-sam-by-coordinates' => undef,

## Specify once, to keep temporary file of each pass, twice to also keep the
##  individual temporary file of each thread.
'keep-temporary-files' => 0,  # 0,1,2


##-- advanced parameter --------------------------------------------------##

## Number of reads to check out at once for individual correction 
##  process.
'chunk-size' => 125,

##
'passes' => 2,

## shrimp pass 1
'shrimp:1' => {
	'-h' => "55%",
	'--report' => 1000,
	'-s' => "w12",
	'--match' => 10,
	'--mismatch' => -70,
	'--open-r' => -8,
	'--open-q' => -8,
	'--ext-r' => -7,
	'--ext-q' => -7,
},

## shrimp pass 2
'shrimp:2' => {
	'-h' => "35%",
	'--report' => 1000,
	'-s' => "w10",
	'-r' => "25%",
	'-w' => "120%",
	'-H' => '',
	'--trim-off' => '',
	'--match' => 10,
	'--mismatch' => -70,
	'--open-r' => -8,
	'--open-q' => -8,
	'--ext-r' => -7,
	'--ext-q' => -7,
},


