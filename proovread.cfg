## proovread Config File

##-- style ---------------------------------------------------------------##

## This file can be digested by proovread when provided with -c/--cfg. 
##  Options supersede proovread default values but will be overwritten by
##  command line supplied values. The content is directly evaluated as 
##  perl code (list in hash context), therefore proper syntax is crutial:
##   * "#" starts a comment, which is entirely ignored by the program, on
##     creation, every parameter is commented out, remove the "#" at the
##     beginning of the key => value line if you want your modifications to 
##     have effect
##   * Keys/Strings need to be enclosed '' or ""
##   * Each key requires a value
##   * undef (without ''/"") is a perl keyword, use it if value is unknown/
##     not available
##   * each key => value pair has to be followed by a ","
##   * white space has no effect but better readability
##   * since parameter are evaled, you can use code snippets to determine 
##     parameter dynamically, e.g. to auto-detect the maximum number of 
##     threads available replace:
##     'threads' => 8,
##     by
##     'threads' => qx(grep '^processor' /proc/cpuinfo | wc -l) =~ s/\n//r,
##     or use perl glob(*.fq) to auto-detect input files...
##   * if you want to create a customized, slim version of this config, the
##     only requirement is that it forms a valid perl list of alternating 
##     keys and values with an even number of arguments total. E.g. these 
##     one liners would make equivalent, complete and proper configs:
##
##         'long-reads',"LR.fa",'short-reads',"SR.fq"
##     or 
##         'long-reads' => "LR.fa", 'short-reads' => "SR.fq"
##
##    * Constrasting to the command line behaviour, keys cannot be 
##      abbreviated


##-- command line parameter ----------------------------------------------##

## LIST of Pacbio read files to correct. FASTA or FASTQ format. 
'long-reads' => [],

## LIST of high confidence short read files used for correction in FASTQ or FASTA format.
'short-reads' => [],

## Prefix to output files. Defaults to 'proovread'
'prefix' => undef,

## Coverage cutoff for highest scoring mappings at each location.
'coverage' => 30,

## Number of threads to use for mapping. Defaults to 8 (or maximum available 
##  number of processors, if kess than 8 availabe).
'threads' => 4,
## to auto-detect max processors use:
##  'threads' => qx(grep '^processor' /proc/cpuinfo | wc -l) =~ s/\n//r,

## 
'mode' =>  undef, #'bwa-pre', 'pacbio-pre', 'pacbio-iterative', 'pacbio-ccs', 'external-sam'
# for custom modes see mode_passes in the "advanced options" section

## Use already created mapping in SAM format to create corrected consensus 
##  sequences from. Use this as alternative input to --long-reads/short-reads
##  If --sam is specified, --mode is automatically set to "external-sam".
'sam' => undef,

## Sort the filtered SAM files by coordinates in addition to the 
##  sorting of references. This has no effect on the pipeline, and is just 
##  a convenience if you need the files for something else.
'sort-sam-by-coordinates' => undef,

## Specify '1' to keep temporary file of each pass, '2' to also keep the
##  individual temporary file of each thread.
'keep-temporary-files' => 0,  # 0,1,2

## overwrite exiting output folder
'overwrite' => 0,


##-- advanced parameter --------------------------------------------------##
## don't mess with these unless you know what you are doing

## Long read qv-offset, required if --sam and --long are used together, and
##  it cannot be detected automatically from --long file.
'lr-qv-offset' => undef,

## Short read quality offset, usually 64 or 33, use 0 for FASTA. Defaults to 
##  guessing, Specify value if guessing fails. Needs to be the same for all
##  short read files provided.
'sr-qv-offset' => undef,

## Short read length. Defaults to guessing, sampling 1000 reads from input
##  file. Specify value if guessing fails.
'sr-length' => undef,

## Number of short reads provided, used for ETA calculation. Defaults to 
##  guessing based on 1000 randomly sampled reads. Specify value if guessing
##  fails.
'sr-count' => undef,

## Toggle short reads head/tail trimming including leading/trailing indels 
##  sr-indel-taboo-length
'sr-trim' => 1,

## Adjust sampling of short reads for mapping, uses SeqChunker - requires
##  SeqChunker "--long options"
'sr-sampling' => {
	DEF => 0, # no sampling - entire sr-file
	'shrimp-pre-1' => {
		'--chunk-number' => 1000,
		'--chunk-step' => 10,
		'--chunks-per-step' => 4,
		'--first-chunk' => 2,			  # use 4 chunks every 10th chunks -> ratio: 0,4 => 40% 
	},
	'shrimp-pre-2' => {
		'--chunk-number' => 1000,
		# use 3 chunks every 5 chunks, but start at second chunk => 67%
		#  complementary to first iter chunks
		'--chunk-step' => 5, 
		'--first-chunk' => 3,
		'--chunks-per-step' => 3,
	},
	'shrimp-pre-3' => {
		'--chunk-number' => 1000,
		'--chunk-step' => 3, # use every 3rd chunk => 33%
		'--first-chunk' => 2,
	},
	'bwa-pre-1' => {
		'--chunk-number' => 1000,
                # 33%
		'--chunk-step' => 3,
		'--first-chunk' => 1,
	},
	'bwa-pre-2' => {
		'--chunk-number' => 1000,
                # 33% complementary
		'--chunk-step' => 3, 
		'--first-chunk' => 2,
		'--chunks-per-step' => 1,
	},
	'bwa-pre-3' => {
		'--chunk-number' => 1000,
		'--chunk-step' => 3,
		'--first-chunk' => 3,
	},
	'bwa-pre-4' => {
		'--chunk-number' => 1000,
                # 20%
		'--chunk-step' => 5,
		'--first-chunk' => 1,
	},
                
},


## expand lcr-min-length (min-sr-length + max-sr-dev) to this ratio.
'lcr-min-ratio' => 1.3,

## 
'lcr-end-ratio' => {
	DEF => 0.5,
	'shrimp-pre-1' => 0.8,
	'shrimp-pre-2' => 0.3,
	'shrimp-pre-3' => 0.5,
	'shrimp-pre-4' => 0.5,
	'bwa-pre-1' => 0.8,
	'bwa-pre-2' => 0.3,
},


## Trim reads to prevent insertions/deletions within the first 
## 'sr-indel-taboo-length' fraction of the read. N=0 deactivates the feature.
'sr-indel-taboo' => 0.1,

## Detect and identify chimera like looking reads
'detect-chimera' => {
	DEF => 0,
	'shrimp-finish' => 1,
	'bowtie-finish' => 1,
	'bwa-finish' => 1,
	'read-sam' => 1, 
},

## annotate and mask reads with less than x sr-reads mappings and no hcr 
##  from prev. weakly supported reads often are contaminations - at least 
##  in genomic data
'mask-weak-reads' => {
	DEF => 20, # masking
	#'shrimp-pre-1' => 10, # activate on contaminated genome data 
	#'shrimp-pre-2' => 10, # activate on contaminated genome data 
},

## annotate, reads with less than x sr-reads, but pass them through
##  unprocessed - use this to get unmasked, but annotated low_support reads 
##  in final iterations
'ignore-weak-reads' => {
	DEF => 20, #  masking
 # 'shrimp-final' => 20, # activate on contaminated genome data
},

## hcr-mask parameter for SeqFilter --phred-mask
## phred-min,phred-max,mask-min-len,unmask-min-len,mask-reduce,mask-end-ratio
## set mask/unmask-min-len assuming 100bp short reads, the values will
## be dynamically adjusted to the effective short read length
'hcr-mask' => {
           DEF => '5,41,80,130,30,0.8',
},

## Number of bases at the end of a hcr from the previous iteration not be 
##  masked w/r/t sr-length
'hcr-sticky-ratio' => .3,

## Minimum length of a hcr region to be considered as such w/r/t sr-length,
##  0 deactivates hcr detection.
'hcr-min-ratio' => .8,

## Number of reads to check out at once for individual consensus correction 
##  process. Memory intensive step, be cautios with great values
'chunk-size' => 100,

## Size in base pairs of bins for local score comparisons
'bin-size' => 20,


##-- task settings -------------------------------------------------------##

'mode-tasks' => {
	# illumina, evenly covered, e.g. genome
	'pacbio-pre' => ['read-long', 'shrimp-pre-1', 'shrimp-pre-2', 'shrimp-pre-3', 'shrimp-finish'],
	# use an externally created SAM file
	'external-sam' => ['read-long', 'read-sam'],
	# illumina, unevenly covered, e.g. quant. RNA-seq, slower than pacbio-pre
	'pacbio-iterative' => ['read-long', 'shrimp-iter-1', 'shrimp-iter-2', 'shrimp-finish'],	
	# Experimental:
	'unitigs' => ['read-long', 'blasr-unitigs'],
	# Experimental:
	'bwa-pre' => ['read-long', 'bwa-pre-1', 'bwa-pre-2', 'bwa-pre-3', 'bwa-pre-4', 'bwa-finish'],
        # Experimental: illumina, bowtie2 + shrimp
	'bowtie2' => ['read-long', 'bowtie2-iter-1', 'shrimp-pre-2', 'bowtie2-finish'],
	# Experimental: Circualar Consensus, 454...
	'pacbio-ccs' => ['read-long', 'shrimp-ccs', 'shrimp-finish'],

        # custom => ['my-pass-settings, finish],  #...


},


## shrimp pre 1
'shrimp-pre-1' => {
	'-h' => "55%",
	'--report' => 200,
	'-s' => "1"x11,
	'-w' => "130%",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
},

## shrimp pre 2
'shrimp-pre-2' => {
	'-h' => "55%",
	'--report' => 200,
	'-s' => "1"x10,
	'-w' => "140%",
	'-r' => "45%",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
},

## shrimp pre 3
'shrimp-pre-3' => {
	'-h' => "50%",
	'--report' => 200,
	'-s' => "11111111,1111110000111111",
	'-w' => "140%",
	'-r' => "35%",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
},

### shrimp pre 4
'shrimp-pre-4' => {
	'-h' => "35%",
	'--report' => 200,
	'-s' => ("1"x7).",111101111",
	'-w' => "150%",
	'-r' => "25%",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
},

## shrimp finish
'shrimp-finish' => {
	'-h' => "90%",
	'--report' => 200,
	'-s' => "1"x20,
	'--hash-spaced-kmers' => '',
	'--match' => 5,
	'--mismatch' => -10,
	'--open-r' => -5,
	'--open-q' => -5,
	'--ext-r' => -2,
	'--ext-q' => -2,
},

## shrimp pass 1
'shrimp-iter-1' => {
	'-h' => "65%",
	'--report' => 1000,
	'-s' => "w12",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
	'--trim-off' => '',
},

## shrimp pass 2
'shrimp-iter-2' => {
	'-h' => "60%",
	'--report' => 1000,
	'-s' => "w10",
	'-r' => "45%",
	'-w' => "120%",
	'--no-mapping-qualities' => '',
	'--match' => 5,
	'--mismatch' => -11,
	'--open-r' => -2,
	'--open-q' => -1,
	'--ext-r' => -4,
	'--ext-q' => -3,
},

## shrimp ccs
'shrimp-ccs' => {
        '-h' => "60%",
        '--report' => 100,
        '-s' => "w14",
        '-r' => "200",
        '-w' => "120%",
        '-H' => '',
		'--no-mapping-qualities' => '',
        '--trim-off' => '',
        '--match' => 5,
        '--mismatch' => -11,
        '--open-r' => -2,
        '--open-q' => -1,
        '--ext-r' => -4,
        '--ext-q' => -3,
        '--longest-read' => 3000,
},

'bowtie2-iter-1' => {
	'--time' => '',
	'-D' => 5,
	'-L' => 32,
	'-k' => '200',
	'-N' => 0,
	'--score-min' => 'L,0,-0.7',
	'-i' => 'C,1,0',
	'--gbar' => 5,
	'--rdg' => '-2,3',
	'--rfg' => '-2,4',
	'--mp'	=> '11',
	'--end-to-end' => '',
},

'bowtie2-finish' => {
	'--time' => '',
	'-D' => 5,
	'-L' => 32,
	'-k' => '200',
	'-N' => 0,
	'--score-min' => 'L,0,-0.2',
#	'-i' => 'C,1,0',
	'--gbar' => 5,
#	'--rdg' => '-2,3',
#	'--rfg' => '-2,4',
#	'--mp'	=> '11',
	'--end-to-end' => '',
},

'blasr-unitigs' => {   
                    '-bestn' => 1000,
                    '-nCandidates' => 1000
                   },

'bwa-pre-1' => {
                '-a' => '',
                '-Y' => '',
                qw(-k 17 -w 30 -A 5 -B 11 -O 2,1 -E 4,3)# -r 1 -y 100)
               },
'bwa-pre-2' => {
                '-a' => '',
                '-Y' => '',
                qw(-k 15 -w 30 -A 5 -B 11 -O 2,1 -E 4,3)# -r 1 -y 100)
               },
'bwa-pre-3' => {
                '-a' => '',
                '-Y' => '',
                qw(-k 13 -w 30 -A 5 -B 11 -O 2,1 -E 4,3)# -r 1 -y 100)
               },
'bwa-pre-4' => {
                '-a' => '',
                '-Y' => '',
                 qw(-k 11 -W 33 -w 30 -A 5 -B 11 -O 2,1 -E 4,3)# -r 1 -y 100)
                },
               'bwa-finish' => {
                '-a' => '',
                '-Y' => '',
                 qw(-k 33)# -r 1 -y 100)
               },

##-- Chimera filter ------------------------------------------------------##
'chimera-filter' => {
	'--min-score' => 0.01,
	'--trim-length' => 20,
	'--verbose' => 2
},

##-- SeqFilter settings --------------------------------------------------##

'seq-filter' => {
	'--trim-win' =>  20,
	'--trim-lcs' =>  '3,50,100',
	'--min-length' => 100,
},

##-- siameara settings ---------------------------------------------------##

'siamaera' => {
},


